- save change
- first in event store
- check version (retrieved when repo initialized)
- after event is stored - save in crud db

- if first save fails - error
- if second save fails - no other saves to event store or crud could be performed
  a resolver function could be made (reducer)
  first save would fail because version from crud would not be as expected
  
on
  link created
  link promoted
trigger
  assign reviewer

v1
  - single owner
v2
  - payments
v3
  - multiple owners
  - newsletter user roles (moderators helping)

queries
 - links: (by status) approved | rejected | inReview
 - links: (by stage) 0 1 2 3
 - * subscriber by newsletterId and similarityRank
 - comments by topic
 - issues by status

newsletter {
  id
  owners: userId[]
  stages: []
  maxReviewers: 500
}

linkÂ {
  newsletterId
  status: banned | inReview | rejected | approved
  userId
  stage: 0 | 1 | 2
  reviews: [
    {
      evaluation: null | accept | reject
      reviewerId: userId
    }
  ]
}

subscriber {
  userId
  newsletterId
  similarityRank
}

comment {
  id
  topic
}

issueId {
  id
  newsletterId: id
  templateId: id
  status: sent | sending | draft | cancelled
}

templateId {
  id
}